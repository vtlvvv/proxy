events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    error_log /var/log/nginx/error.log debug;
    
    server {
        listen 80;
        resolver 8.8.8.8 valid=300s;
        resolver_timeout 5s;
        
        # Health check
        location = /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Proxy to Hostinger API
        location /api/ {
            # Remove the trailing slash from proxy_pass to preserve the path
            proxy_pass https://developers.hostinger.com;
            
            # Essential headers
            proxy_set_header Host developers.hostinger.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent "nginx-proxy/1.0";
            
            # Connection settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_request_buffering off;
            
            # SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_session_reuse on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_verify off;  # Important: disable SSL verification
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling
            proxy_next_upstream error timeout http_502 http_503 http_504;
        }
        
        # Catch-all for other paths
        location / {
            return 404 '{"error": "Endpoint not found"}';
            add_header Content-Type application/json;
        }
    }
}
